from aiogram import Bot, Dispatcher, executor, types
from aiogram.utils.markdown import hbold, hlink
from aiogram.dispatcher import FSMContext
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from tg_mv_funcs import sql_result, sql_find_all, users_clicks, id, name, lstName, nick
from states import Search
from time import sleep
import mvideo_buttons as mv
import os

# -- Bot ---
bot = Bot(token=os.getenv('TG_MVIDEO_BOT'), parse_mode=types.ParseMode.HTML)

storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

async def on_shutdown(dp):
     await bot.close()
     await storage.close()


# --- Handlers ---
@dp.message_handler(commands='find', state=None)
async def enter_test(message: types.Message):
     await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω–æ–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ")
     await Search.Find.set()


@dp.message_handler(state=Search.Find)
async def find_goods(message: types.Message, state: FSMContext):

     answer = message.text
     await state.update_data(answer1 = answer)
     await message.answer('Processing...')

     if message.text:

          count = 0
          goods = sql_find_all(product = message.text)

          try:
               for index, item in enumerate(goods):
                    card = f"{ hlink(item[0], item[4]) }\n"\
                         f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                         f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                         f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                         f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"

                    count += 1
               
                    if index % 20 == 0:
                         sleep(3)

                    await message.answer(card)

          except Exception:
               await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å –µ—â–µ —Ä–∞–∑, –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä—Ç–∏–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ!')

          await message.answer(f'–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {count}.\n–î–ª—è –ø–æ–≤—Ç–æ—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π "/find".')  

     await state.finish()

     users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
     f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')


@dp.message_handler(commands='start')
async def start(message: types.Message):
     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, {0.first_name}'.format(message.from_user), reply_markup=mv.mainMenu)


# --- Buttons ---
@dp.message_handler()
async def goods_buttons(message: types.Message):

     global mainBtn
#                                       --- –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å ---
     if message.text == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          mainBtn = 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã'
          await bot.send_message(message.from_user.id, 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã', reply_markup=mv.smartphonesMenu)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Apple ---
     elif message.text == 'Apple' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'APPLE'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Xiaomi ---
     elif message.text == 'Xiaomi' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'XIAOMI'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')               

# --- Samsung ---
     elif message.text == 'Samsung' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'SAMSUNG'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')               

# --- Realme ---
     elif message.text == 'Realme' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'REALME'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Huawei ---
     elif message.text == 'Huawei' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'HUAWEI'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Tecno ---
     elif message.text == 'Tecno' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'TECNO'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Vivo ---
     elif message.text == 'Vivo' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'VIVO'", main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ü—Ä–æ—á–µ–µ ---
     elif message.text == '–ü—Ä–æ—á–µ–µ' and mainBtn == 'üì±–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'APPLE', 'XIAOMI', 'SAMSUNG', 'REALME', 'HUAWEI', 'TECNO', 'VIVO'",\
                main_category = "'–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ —Å–≤—è–∑—å'", contain='NOT IN', comment='--')

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞: ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}      "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')
                    

     elif message.text == '‚¨ÖÔ∏è–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
          await bot.send_message(message.from_user.id, '‚¨ÖÔ∏è–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=mv.mainMenu)
     
          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')



#                                       --- –¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í ---
     elif message.text == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          mainBtn = 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã'
          await bot.send_message(message.from_user.id, 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã', reply_markup=mv.tvMenu)
          
          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Sony ---    
     elif message.text == 'Sony' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'SONY'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Samsung ---      
     elif message.text == 'Samsung' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'SAMSUNG'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- LG ---      
     elif message.text == 'LG' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'LG'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Philips ---      
     elif message.text == 'Philips' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'PHILIPS'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Telefunken ---      
     elif message.text == 'Telefunken' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'TELEFUNKEN'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Haier ---      
     elif message.text == 'Haier' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'HAIER'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- Hisense ---      
     elif message.text == 'Hisense' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'HISENSE'", main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ü—Ä–æ—á–µ–µ ---      
     elif message.text == '–ü—Ä–æ—á–µ–µ' and mainBtn == 'üì∫–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã':
          await message.answer('Processing...')

          data = sql_result(manufacturers = "'SONY','SAMSUNG','LG','PHILIPS','TELEFUNKEN','HAIER','HISENSE'",\
                main_category = "'–¢–ï–õ–ï–í–ò–ó–û–†–´ –ò –¶–ò–§–†–û–í–û–ï –¢–í'", contain='NOT IN', comment = '--')

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')


#                                       --- –ö–û–ú–ü–¨–Æ–¢–ï–†–ù–ê–Ø –¢–ï–•–ù–ò–ö–ê ---

     elif message.text == 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞':
          mainBtn = 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞'
          await bot.send_message(message.from_user.id, 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', reply_markup=mv.compMenu)
          
          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ù–æ—É—Ç–±—É–∫–∏ ---    
     elif message.text == '–ù–æ—É—Ç–±—É–∫–∏' and mainBtn == 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–ò–ì–†–û–í–´–ï –ù–û–£–¢–ë–£–ö–ò', '–ù–û–£–¢–ë–£–ö–ò', '–ù–û–£–¢–ë–£–ö–ò APPLE MACBOOK', '–ù–û–£–¢–ë–£–ö–ò-–¢–†–ê–ù–°–§–û–†–ú–ï–†–´'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ü–ª–∞–Ω—à–µ—Ç—ã ---    
     elif message.text == '–ü–ª–∞–Ω—à–µ—Ç—ã' and mainBtn == 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–ü–õ–ê–ù–®–ï–¢–´ –ù–ê ANDROID'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –°–∏—Å—Ç–µ–º–Ω—ã–µ –±–ª–æ–∫–∏ ---    
     elif message.text == '–°–∏—Å—Ç–µ–º–Ω—ã–µ –±–ª–æ–∫–∏' and mainBtn == 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–°–ò–°–¢–ï–ú–ù–´–ï –ë–õ–û–ö–ò', '–°–ò–°–¢–ï–ú–ù–´–ï –ë–õ–û–ö–ò –ò–ì–†–û–í–´–ï'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ú–æ–Ω–∏—Ç–æ—Ä—ã ---    
     elif message.text == '–ú–æ–Ω–∏—Ç–æ—Ä—ã' and mainBtn == 'üíª–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–ú–û–ù–ò–¢–û–†–´', '–ò–ì–†–û–í–´–ï –ú–û–ù–ò–¢–û–†–´'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')


#                                       --- "–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç" ---

     elif message.text == 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
          mainBtn = 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç'
          await bot.send_message(message.from_user.id, 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç', reply_markup=mv.eltrMenu)
          
          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –°–∞–º–æ–∫–∞—Ç—ã ---    
     elif message.text == '–°–∞–º–æ–∫–∞—Ç—ã' and mainBtn == 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–≠–õ–ï–ö–¢–†–û–°–ê–ú–û–ö–ê–¢–´'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä—ã ---    
     elif message.text == '–ì–∏—Ä–æ—Å–∫—É—Ç–µ—Ä—ã' and mainBtn == 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–ì–ò–†–û–°–ö–£–¢–ï–†–´ 10 –î–Æ–ô–ú–û–í', '–ì–ò–†–û–°–ö–£–¢–ï–†–´ 8 –î–Æ–ô–ú–û–í', '–ì–ò–†–û–°–ö–£–¢–ï–†–´ 6.5 –î–Æ–ô–ú–û–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –í–µ–ª–æ—Å–∏–ø–µ–¥—ã ---    
     elif message.text == '–í–µ–ª–æ—Å–∏–ø–µ–¥—ã' and mainBtn == 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–≠–õ–ï–ö–¢–†–û–í–ï–õ–û–°–ò–ü–ï–î–´'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

# --- –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã ---    
     elif message.text == '–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã' and mainBtn == 'üõ¥–≠–ª–µ–∫—Ç—Ä–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç':
          await message.answer('Processing...')

          data = sql_result(subcategory = "'–ê–ö–°–ï–°–°–£–ê–†–´ –î–õ–Ø –ì–ò–†–û–°–ö–£–¢–ï–†–û–í'")

          for index, item in enumerate(data):
               card = f"{ hlink(item[0], item[4]) }\n"\
                    f"{ hbold('–ù–æ–≤–∞—è —Ü–µ–Ω–∞:   ')}{item[2]}üî•  "\
                    f"{ hbold('–†–µ–π—Ç–∏–Ω–≥: ')}{ item[5] }üåü\n"\
                    f"{ hbold('–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ')}{ item[1]}        "\
                    f"{ hbold('–ë–æ–Ω—É—Å—ã: ')}{ item[3] }"
               
               if index % 20 == 0:
                    sleep(3)

               await message.answer(card)

          users_clicks(f'{id.format(message.from_user)}',f'{nick.format(message.from_user)}',f'{name.format(message.from_user)}',\
               f'{lstName.format(message.from_user)}',f'{message.text.format(message.from_user)}')

def main():
     
     executor.start_polling(dp, on_shutdown=on_shutdown)

if __name__ == '__main__':
     main()




#
                    
  
               
